{"ast":null,"code":"var _jsxFileName = \"/Users/kritika/src/bejeweled/src/Cell.js\";\nimport React, { Component } from 'react';\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jewel: \"\"\n    }; //Bindings\n\n    this.randomJewel = this.randomJewel.bind(this);\n  }\n\n  randomJewel() {\n    const jewels = [1, 2, 3, 4, 5, 6, 7];\n    return jewels[Math.floor(jewels.length * Math.random())];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" \", this.randomJewel()));\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/Users/kritika/src/bejeweled/src/Cell.js"],"names":["React","Component","Cell","constructor","props","state","jewel","randomJewel","bind","jewels","Math","floor","length","random","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC;AADG,KAAb,CAFc,CAKd;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AACGD,EAAAA,WAAW,GAAG;AACV,UAAME,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAf;AACA,WAAOA,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACG,MAAP,GAAgBF,IAAI,CAACG,MAAL,EAA3B,CAAD,CAAb;AACH;;AAELC,EAAAA,MAAM,GAAG;AACP,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKP,WAAL,EAAP,CADJ,CADJ;AAKD;;AApB0B;;AAuB7B,eAAeL,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Cell extends Component {\n  constructor(props){\n      super(props);\n      this.state = {\n          jewel:\"\" \n      };\n      //Bindings\n      this.randomJewel = this.randomJewel.bind(this)\n  }\n      randomJewel() {\n          const jewels = [1, 2, 3, 4, 5, 6, 7];\n          return jewels[Math.floor(jewels.length * Math.random())];\n      }\n\n  render() {\n    return (\n        <div className=\"cell\">\n            <h2> { this.randomJewel() }</h2>\n        </div>\n    );\n  }\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}